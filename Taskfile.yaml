version: "3"

tasks:
  up:
    desc: starts docker compose services
    cmds:
      - docker compose up -d

  down:
    desc: stops docker compose services
    cmds:
      - docker compose down

  install-deps:
    desc: install dependencies
    run: once
    cmds:
      - go get ./...
    sources:
      - go.mod
      - go.sum

  build:app:
    desc: builds app
    deps:
      - install-deps
    cmds:
      - go build -o bin/app cmd/app/app.go
    sources:
      - ./**/*.go
    generates:
      - bin/app

  build:worker:
    desc: builds worker
    deps:
      - install-deps
    cmds:
      - go build -o bin/worker cmd/worker/worker.go
    sources:
      - ./**/*.go
    generates:
      - bin/worker

  build:migrate:
    desc: builds migrate
    deps:
      - install-deps
    cmds:
      - go build -o bin/migrate cmd/migrate/migrate.go
    sources:
      - ./cmd/migrate/migrate.go
      - ./cmd/migrate/migrations/*.sql
    generates:
      - bin/migrate

  migrate-up:
    desc: run migrations
    deps:
      - build:migrate
    cmds:
      - bin/migrate up
    sources:
      - /bin/migrate
    status:
      - bin/migrate status 2>&1 | grep -q "Pending" && exit 1 || exit 0

  build:
    desc: builds app, worker and migrate
    cmds:
      - task: build:app
      - task: build:worker
      - task: build:migrate

  clean:
    desc: cleans generated binaries and caches
    cmds:
      - rm -f bin/*
      - go clean -cache -testcache -fuzzcache

  format:
    desc: runs all formatters
    deps:
      - format:go
      - format:mise
      - format:yaml
      - format:sql

  format:go:
    desc: formats go files
    cmds:
      - goimports -w .
    sources:
      - ./**/*.go

  format:mise:
    desc: format mise config
    cmds:
      - mise fmt
    sources:
      - .mise.toml

  format:yaml:
    desc: format yaml
    cmds:
      - yamlfmt -formatter indent=2,retain_line_breaks=true ./**/*.yaml ./.github/workflows/*.yaml
    sources:
      - ./**/*.yaml
      - ./.github/workflows/*.yaml

  format:sql:
    desc: formats sql files
    cmds:
      - sqruff fix
    sources:
      - ./cmd/migrate/migrations/*.sql

  lint:
    desc: runs all linters
    deps:
      - lint:go
      - lint:dockerfile
      - lint:sql

  lint:go:
    desc: lints go code
    deps:
      - install-deps
    cmds:
      - golangci-lint run
    sources:
      - .golangci.yaml
      - ./**/*.go

  lint:dockerfile:
    desc: lints Dockerfile
    cmds:
      - hadolint Dockerfile
    sources:
      - Dockerfile

  lint:sql:
    desc: lints sql files
    cmds:
      - sqruff lint .
    sources:
      - ./cmd/migrate/migrations/*.sql

  test:
    desc: runs tests
    deps:
      - install-deps
    cmds:
      - go test ./...

  test-load:
    desc: runs load tests
    cmds:
      - k6 run test/k6/load-test.js

  gitleaks:
    desc: runs gitleaks
    cmds:
      - gitleaks detect .

  setup:
    desc: sets up the project
    cmds:
      - task: up
      - task: install-deps
      - task: migrate-up

  ci:
    desc: runs standard checks
    deps:
      - gitleaks
      - format
      - lint
      - migrate-up
    cmds:
      - task: test
